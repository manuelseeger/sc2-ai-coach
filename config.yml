name: "AICoach"
# Where to look for replays
replay_folder: "C:\\Users\\student\\Documents\\StarCraft II\\Accounts\\1234567568\\2-S2-1-123456\\Replays\\Multiplayer"
# Game shorter than this will be ignored and the replays deleted when the clean option is on
instant_leave_max: 50
# Look for new replays every X seconds
deamon_polling_rate: 1

# Audiomode, one of "full", "text", "in", "out"
audiomode: "text"
# Index of the audio device as returned by pyaudio
microphone_index: 2
# Which model to use from openwakeword
oww_model: "hey_jarvis"
# Sensitivity of the wake word
oww_sensitivity: 0.65
# which speech recognition model to use from huggingface speech-to-text
speech_recognition_model: "openai/whisper-large-v3"
# Configure speech recognition from microphone
recognizer:
  # minimum audio energy to consider for recording
  energy_threshold: 500
  # seconds of non-speaking audio before a phrase is considered complete
  pause_threshold: 0.9
  # minimum seconds of speaking audio before we consider the speaking audio a phrase - values below this are ignored (for filtering out clicks and pops)
  phrase_threshold: 0.3
  # seconds of non-speaking audio to keep on both sides of the recording
  non_speaking_duration: 0.1
  # how much of the captured audio must be detected as voice for transcribing to start
  speech_threshold: 0.3

# Which text to speech engine and voice model to use
tts:
  engine: "kokoro"
  voice: "af_heart"
  speed: 1.25

# Hotkey to call up the AI coach prompt when run in text-in mode
wake_key: "ctrl+alt+w"
# Determines whether you can interact with AI coach; if False, AI coach will handle replays but won't ask for your input
interactive: True

# Configure the "student" - the player using AI coach
student:
  name: "studentname"
  race: "Terran"
  # Emoji to represent the student in output
  emoji: ":man_technologist:"
  # URL pointing to your public sc2replaystats profile's map stats (optional)
  # Example https://sc2replaystats.com/account/maps/69238/0/238923/1v1/AutoMM
  sc2replaystats_map_url:

# Address of the SC2 game client server
sc2_client_url: "http://127.0.0.1:6119"

# AI coach backend, use "Mocked" for testing without an AI backend
aibackend: "OpenAI"
# which GPT model to use for OpenAI Assistant API
gpt_model: "gpt-4.1"
# Cost per prompt token
gpt_prompt_pricing: 0.0000020
# Cost per completion token
gpt_completion_pricing: 0.000008

# Which events should the AI coach react to
coach_events:
  - game_start
  - wake
  - new_replay

# Directory where to store log files: 
log_dir: "logs"
# Integration with OBS; Faster detection of new game started but requires manual OBS setup
obs_integration: False
# Directory where to store runtime files like screenshots, portraits
obs_dir: "obs"
# Where tesserocr should look for the tesseract data
tessdata_dir: "C:\\Program Files\\Tesseract-OCR\\tessdata"

# The battle.net region we play on
blizzard_region: "EU"
# Whether sc2reader should request map files and populate replays with map details like clock positions
include_map_details: True
# delta in MMR between player and potential opponent when searching on SC2Pulse
rating_delta_max: 750
# delta in MMR between player and potential opponent to consider opponent for barcode unmasking
rating_delta_max_barcode: 500
# maximum time since last played game to consider opponent for barcode unmasking in seconds
last_played_ago_max: 2400
# how many games to pull from the match history to check winrates
match_history_depth: 100

# Current ladder season
season: 64
season_start: "2025-07-19"
# Maps in the current ladder pool 
ladder_maps:
 - Incorporeal
 - Last Fantasy
 - Ley Lines LE
 - Magannatha LE
 - Persephone
 - Pylon
 - Tokamak
 - Torches
 - Ultralove LE

# Configure which replay fields to include per default when reading replays
default_projection:
  id: 1
  date: 1
  game_length: 1
  map_name: 1
  players.avg_apm: 1
  players.highest_league: 1
  players.name: 1
  players.messages: 1
  players.pick_race: 1
  players.pid: 1
  players.play_race: 1
  players.result: 1
  players.scaled_rating: 1
  players.stats.avg_unspent_resources: 1
  players.toon_handle: 1
  players.build_order.time: 1
  players.build_order.name: 1
  players.build_order.supply: 1
  players.build_order.is_chronoboosted: 1
  players.worker_stats.worker_micro: 1
  players.worker_stats.worker_split: 1
  players.worker_stats.worker_trained_total: 1
  real_length: 1
  stats: 1
  unix_timestamp: 1

# Name of the MongoDB database where the replay collection is stored
db_name: "SC2"
